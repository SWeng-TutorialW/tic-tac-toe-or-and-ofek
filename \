package il.cshaifasweng.OCSFMediatorExample.client;

import java.io.IOException;

import org.greenrobot.eventbus.EventBus;

import il.cshaifasweng.OCSFMediatorExample.client.ocsf.AbstractClient;
import il.cshaifasweng.OCSFMediatorExample.entities.Warning;

public class SimpleClient extends AbstractClient {

  private static SimpleClient client = null;
  private boolean ingame = false;
  private GameController gameController;

  private SimpleClient(String host, int port) {
    super(host, port);
  }

  @Override
  protected void handleMessageFromServer(Object msg) {
    String message = (String) msg;
    if (message.equals("full")) {
      ConnectionController controller = App.getFxmlLoader().getController();
      controller.printError("Error: Game is full");
    } else if (!ingame) {
      try {
        App.setRoot("game");
      } catch (IOException e) {
        e.printStackTrace();
      }
      gameController = App.getFxmlLoader().getController();
    }
    if (message.equals("waiting")) {
      gameController.setStatus("Waiting for second player");
    }
    if (message.equals("x")) {
      gameController.setStatus("You're X");
    }
    if (message.equals("o")) {

    }
  }

  public static SimpleClient getClient() {
    return client;
  }

  public static SimpleClient createClient(String host, int port) {
    client = new SimpleClient(host, port);
    return client;
  }

}
